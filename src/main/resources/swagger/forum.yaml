swagger: "2.0"
info:
  description: "This is a sample forum server"
  version: "1.0.0"
  title: "Forum API"
  termsOfService: "https://github.com/jaswalkiranavtar/interview-question3/terms/"
  contact:
    email: "jaswalkiranavtar@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:5000"
basePath: "/v2"
tags:
- name: "question"
  description: "Question description"
  externalDocs:
    description: "Find out more"
    url: "http://xyz.io"
schemes:
- "https"
- "http"
paths:
  /questions:
    post:
      tags:
      - "question"
      summary: "Create a new question"
      description: ""
      operationId: "addQuestion"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Question to be asked in the forum"
        required: true
        schema:
          $ref: "#/definitions/Question"
      responses:
        "201":
          description: "question created"
          schema:
            $ref: "#/definitions/Question"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
    get:
      tags:
      - "question"
      summary: "Get a list of questions"
      description: ""
      operationId: "getAllQuestions"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Question"
        "204":
          description: "No Content"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
  /questions/{questionId}:
    get:
      tags:
      - "question"
      summary: "Find thread by ID"
      description: "Returns the question along with all its replies"
      operationId: "getQuestionById"
      produces:
      - "application/json"
      parameters:
      - name: "questionId"
        in: "path"
        description: "ID of questionId to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "question created"
          schema:
            $ref: "#/definitions/Question"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        "404":
          description: "Not Found"
  /questions/{questionId}/reply:
    post:
      tags:
      - "question"
      summary: "Post a reply to a message"
      description: ""
      operationId: "replyToQuestion"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "questionId"
        in: "path"
        description: "ID of question to which this reply is answered"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Reply to the question"
        required: true
        schema:
          $ref: "#/definitions/Reply"
      responses:
        "201":
          description: "Created"
          schema:
            $ref: "#/definitions/Reply"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        "404":
          description: "Not Found"
definitions:
  Question:
    type: "object"
    required:
    - "author"
    - "message"
    properties:
      id:
        type: "integer"
        format: "int64"
      author:
        type: "string"
      message:
        type: "string"
      replies:
        type: "array"
        items:
          $ref: "#/definitions/Reply"
  Reply:
    type: "object"
    required:
    - "author"
    - "message"
    properties:
      id:
        type: "integer"
        format: "int64"
      author:
        type: "string"
      message:
        type: "string"
      questionId:
        type: "integer"
        format: "int64"
  Error:
    type: "object"
    required:
    - "message"
    properties:
      fieldName:
        type: "string"
      objectName:
        type: "string"
      rejectedValue:
        type: "string"
      expectedValue:
        type: "string"
      message:
        type: "string"
externalDocs:
  description: "Find out more about Forum API"
  url: "https://github.com/jaswalkiranavtar/interview-question3"